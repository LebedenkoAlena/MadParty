# Generated by Django 4.0.5 on 2022-06-26 07:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opf', models.TextField(blank=True, null=True, verbose_name='Наименование ОПФ юрлица')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Полное наименование организации (для ИП - ФИО)')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='Краткое наименование организации')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Юридический адрес')),
                ('fact_address', models.TextField(blank=True, null=True, verbose_name='Фактический адрес')),
                ('leader_name', models.TextField(blank=True, null=True, verbose_name='ФИО руководителя и должность')),
                ('inn', models.CharField(blank=True, max_length=100, null=True, verbose_name='ИНН')),
                ('oktmo', models.CharField(blank=True, max_length=100, null=True, verbose_name='ОКТМО')),
                ('activity_type', models.TextField(blank=True, null=True, verbose_name='Основной вид деятельности по ОКВЭД')),
                ('workers_number', models.IntegerField(blank=True, null=True, verbose_name='Среднесписочная численность работников на дату проведения мониторинга — Ч (с указанием мужчин - М, женщин - Ж)')),
                ('leader_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон руководителя')),
                ('official_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail руководителя официальный')),
                ('name_safety_specialist', models.TextField(blank=True, null=True, verbose_name='ФИО и должность специалиста по охране труда или ответственного за охрану труда')),
                ('specialist_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон специалиста по охране труда')),
                ('specialist_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail специалиста по охране труда официальный')),
                ('gold_sign', models.BooleanField(blank=True, null=True, verbose_name='Золотой знак')),
                ('gold_sign_date', models.DateField(blank=True, null=True, verbose_name='Дата получение золотого знака')),
                ('is_valuation_done', models.CharField(blank=True, choices=[('YES', 'Да'), ('NO', 'Нет'), ('PARTIALLY', 'Частично')], max_length=50, null=True, verbose_name='Специальная оценка проведена')),
                ('report_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата внесения отчета СОУТ')),
                ('report_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер отчета во ФГИС СОУТ')),
                ('workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест в организации')),
                ('workplace_number_with_valuation', models.IntegerField(blank=True, null=True, verbose_name='Количество рабочих мест, на которых проведена СОУТ')),
                ('valuated_workplace_percent', models.CharField(blank=True, max_length=50, null=True, verbose_name='% рабочих мест, охваченых СОУТ')),
                ('class1_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 1 класса')),
                ('class1_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 1 класса')),
                ('class2_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 2 класса')),
                ('class2_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 2 класса')),
                ('class31_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 3.1 класса')),
                ('class31_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 3.1 класса')),
                ('class32_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 3.2 класса')),
                ('class32_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 3.2 класса')),
                ('class33_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 3.3 класса')),
                ('class33_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 3.3 класса')),
                ('class34_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 3.4 класса')),
                ('class34_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 3.4 класса')),
                ('class4_workplace_number', models.IntegerField(blank=True, null=True, verbose_name='Всего рабочих мест с условием труда 4 класса')),
                ('class4_workers_number', models.IntegerField(blank=True, null=True, verbose_name='Всего человек, работающих на рабочих местах с условием труда 4 класса')),
                ('workers_on_danger_positions_percent', models.CharField(blank=True, max_length=50, null=True, verbose_name='% рабочих на опасных местах')),
                ('is_risk_valuation_done', models.CharField(blank=True, choices=[('YES', 'Да'), ('NO', 'Нет'), ('PARTIALLY', 'Частично')], max_length=50, null=True, verbose_name='Проведена оценка профессиональных рисков в области охраны труда')),
                ('risk_valuation_date', models.DateField(blank=True, null=True, verbose_name='Дата проведения последней оценки профессиональных рисков')),
                ('workers_number_with_free_coveralls', models.IntegerField(blank=True, null=True, verbose_name='Численность работников, получающих бесплатно спецодежду, спецобувь и другие средства индивидуальной защиты (СИЗ)– всего:')),
                ('average_percent_provided_coveralls', models.CharField(blank=True, max_length=50, null=True, verbose_name='Средний % обеспеченности работников СИЗ')),
                ('workers_number_with_free_disinfectants', models.IntegerField(blank=True, null=True, verbose_name='Численность работников, получающих бесплатно смывающие и обезвреживающие средства – всего:')),
                ('average_percent_provided_disinfectants', models.CharField(blank=True, max_length=50, null=True, verbose_name='Средний % обеспечения работников смывающими средствами')),
                ('workers_number_with_medical_brief', models.IntegerField(blank=True, null=True, verbose_name='Количество работников, подлежащих обязательным предварительным и периодическим медицинским осмотрам')),
                ('percent_of_workers_with_medical_brief', models.CharField(blank=True, max_length=50, null=True, verbose_name='% работников, прошедших обязательные предварительные и периодические медицинские осмотры')),
                ('number_of_died_workers', models.IntegerField(blank=True, null=True, verbose_name='Количество погибших на производстве, чел')),
                ('died_workers_info', models.TextField(blank=True, null=True, verbose_name='Информация о погибших работниках (дата, должность, возраст)')),
                ('number_of_hard_injury', models.IntegerField(blank=True, null=True, verbose_name='Количество человек, получивших тяжелые травмы')),
                ('hard_injured_workers_info', models.TextField(blank=True, null=True, verbose_name='Информация о работниках, получивших тяжелые травмы (дата, должность, возраст)')),
                ('number_of_group_accidents', models.IntegerField(blank=True, null=True, verbose_name='Групповые несчастные случаи')),
                ('group_accidents_info', models.TextField(blank=True, null=True, verbose_name='Информация о групповых несчастных случаях (дата, должность, возраст)')),
                ('number_of_light_injury', models.IntegerField(blank=True, null=True, verbose_name='Количество человек, получивших легкие травмы')),
                ('light_injured_workers_info', models.TextField(blank=True, null=True, verbose_name='Информация о работниках, получивших легкие травмы (дата, должность, возраст)')),
                ('number_of_micro_injury', models.IntegerField(blank=True, null=True, verbose_name='Количество человек, получивших микротравмы')),
                ('micro_injured_workers_info', models.TextField(blank=True, null=True, verbose_name='Информация о работниках, получивших микротравмы (дата, должность, возраст)')),
                ('normative_act', models.BooleanField(blank=True, null=True, verbose_name='Наличие локального нормативного акта, регламентирующего систему управления охраной труда')),
                ('committee', models.BooleanField(blank=True, null=True, verbose_name='Наличие комитета (комиссии) по охране труда')),
                ('count_security_workers', models.IntegerField(blank=True, null=True, verbose_name='Наличие уполномоченных (доверенных) лиц по охране труда (чел.)')),
                ('agreement_of_security_work', models.BooleanField(blank=True, null=True, verbose_name='Наличие соглашения по охране труда в организации')),
                ('cabinet_of_security_work', models.BooleanField(blank=True, null=True, verbose_name='Наличие кабинета (уголка) охраны труда')),
                ('cabinet_of_first_aid', models.BooleanField(blank=True, null=True, verbose_name='Наличие помещения для оказания медицинской помощи')),
                ('plan_of_upgrade_workers_conditions', models.BooleanField(blank=True, null=True, verbose_name='Наличие плана мероприятий по улучшению и оздоровлению условий труда')),
                ('financing_plan', models.IntegerField(blank=True, null=True, verbose_name='Объем финансирования плана мероприятий по улучшению и оздоровлению условий труда (тыс. руб.)')),
                ('program_of_saving_aid_of_workers', models.BooleanField(blank=True, null=True, verbose_name='Наличие корпоративной программы сохранения здоровья работников')),
                ('count_of_workers', models.IntegerField(blank=True, null=True, verbose_name='Количество работников, которые должны проходить обучение по охране труда и проверку знаний требований охраны труда в аккредитованных образовательных организациях')),
                ('percent_of_educated', models.CharField(blank=True, max_length=50, null=True, verbose_name='% фактически прошедших такое обучение')),
                ('timely_passage', models.BooleanField(blank=True, null=True, verbose_name='Своевременное проведение инструктажей по охране труда')),
                ('trade_union_organisation', models.BooleanField(blank=True, null=True, verbose_name='Наличие профсоюзной организации')),
                ('collective_agreement', models.TextField(blank=True, null=True, verbose_name='Наличие коллективного договора')),
                ('change_agreement', models.TextField(blank=True, null=True, verbose_name='Изменения в колдоговор')),
                ('user_id', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
